{"ast":null,"code":"import { PROBLEMS } from \"../mock-problems\";\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    constructor(http) {\n      this.http = http;\n      // 变量problem,初始化为PROBLEMS：\n      this.problems = PROBLEMS;\n    }\n    // 获取所有problems\n    getProblems() {\n      // getProblems(): Problem[] {\n      // return this.problems;\n      return this.http.get(\"api/v1/problems\"); //调用这个api，返回observable <type>\n    }\n    // 获取某一problem\n    getProblem(id) {\n      // getProblem(id: number): Problem {\n      //   return this.problems.find((problem) => problem.id === id);\n      // return this.http.get(\"api/v1/problems/${id}\")\n      //                   .then((res: Response) => res.json())\n      //                   .catch(this.handleError)\n      console.log(\"getProblem enter\");\n      // return this.http.get<Problem>(\"api/v1/problems/${id}\");\n      return this.http.get(\"api/v1/problems/${id}\");\n    }\n    // addProblem(problem: Problem): Observable<Problem>{\n    addProblem(problem) {\n      problem.id = this.problems.length + 1;\n      this.problems.push(problem);\n      // return this.http.post<Problem>('/api/v1/problems', problem, httpOptions) //problem参数\n      //   .pipe(\n      //     catchError(this.handleError<Problem>('addProblem faild', problem))\n      //   );\n    }\n  }\n\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}