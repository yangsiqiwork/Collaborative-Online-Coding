{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction NewProblemComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const difficulty_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", difficulty_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", difficulty_r1, \" \");\n  }\n}\nconst DEFAULT_PROBLEM = Object.freeze({\n  id: 0,\n  name: \"\",\n  desc: \"\",\n  difficulty: \"Easy\"\n});\nexport let NewProblemComponent = /*#__PURE__*/(() => {\n  class NewProblemComponent {\n    constructor(data) {\n      this.data = data;\n      this.difficulties = [\"Easy\", \"Medium\", \"Hard\", \"Super\"];\n      this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n    }\n    addProblem() {\n      this.data.addProblem(this.newProblem);\n      this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n      //添加后清除\n      // this.data.addProblem(this.newProblem)\n      //   .subscribe( problem => {\n      //     console.log(\"addProblem success\");\n      //     this.data.getProblems();\n      //   })\n      // this.newProblem = Object.assign({}, DEFAULT_PROBLEM)\n    }\n  }\n\n  NewProblemComponent.ɵfac = function NewProblemComponent_Factory(t) {\n    return new (t || NewProblemComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n  NewProblemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewProblemComponent,\n    selectors: [[\"app-new-problem\"]],\n    decls: 20,\n    vars: 4,\n    consts: [[1, \"form-group\"], [\"for\", \"problemName\"], [\"type\", \"text\", \"id\", \"problemName\", \"name\", \"problemName\", \"required\", \"\", \"placeholder\", \"Enter Problem Name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"problemDesc\"], [\"type\", \"text\", \"rows\", \"3\", \"id\", \"problemDesc\", \"name\", \"problemDesc\", \"required\", \"\", \"placeholder\", \"Enter Problem Description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"difficulty\"], [\"id\", \"difficulty\", \"name\", \"difficulty\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"d-grid\", \"gap-2\", \"d-md-flex\", \"justify-content-md-end\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"me-md-2\", 3, \"click\"], [3, \"value\"]],\n    template: function NewProblemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"form\")(2, \"div\", 0)(3, \"label\", 1);\n        i0.ɵɵtext(4, \"Problem Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function NewProblemComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.newProblem.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 0)(7, \"label\", 3);\n        i0.ɵɵtext(8, \"Problem Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"textarea\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function NewProblemComponent_Template_textarea_ngModelChange_9_listener($event) {\n          return ctx.newProblem.desc = $event;\n        });\n        i0.ɵɵtext(10, \"            \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 0)(12, \"label\", 5);\n        i0.ɵɵtext(13, \"difficulty\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function NewProblemComponent_Template_select_ngModelChange_14_listener($event) {\n          return ctx.newProblem.difficulty = $event;\n        });\n        i0.ɵɵtemplate(15, NewProblemComponent_option_15_Template, 2, 2, \"option\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 8)(17, \"div\", 9)(18, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function NewProblemComponent_Template_button_click_18_listener() {\n          return ctx.addProblem();\n        });\n        i0.ɵɵtext(19, \"Add Problem\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.newProblem.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newProblem.desc);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.newProblem.difficulty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.difficulties);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm]\n  });\n  return NewProblemComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}