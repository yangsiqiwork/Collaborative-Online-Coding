{"ast":null,"code":"import { PROBLEMS } from \"../mock-problems\";\nimport * as i0 from \"@angular/core\";\nexport class DataService {\n  constructor() {\n    // 变量problem,初始化为PROBLEMS：\n    this.problems = PROBLEMS;\n  }\n  // 获取所有problems\n  getProblems() {\n    return this.problems;\n  }\n  // 获取某一problem\n  getProblem(id) {\n    return this.problems.find(problem => problem.id === id);\n  }\n  addProblem(problem) {\n    problem.id = this.problems.length + 1;\n    this.problems.push(problem);\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)();\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAQA,QAAQ,QAAO,kBAAkB;;AAMzC,OAAM,MAAOC,WAAW;EAKtBC;IAHA;IACA,aAAQ,GAAcF,QAAQ;EAEd;EAEhB;EACAG,WAAW;IACT,OAAO,IAAI,CAACC,QAAQ;EACtB;EAEA;EACAC,UAAU,CAACC,EAAU;IACnB,OAAO,IAAI,CAACF,QAAQ,CAACG,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACF,EAAE,KAAKA,EAAE,CAAC;EAC3D;EAEAG,UAAU,CAACD,OAAgB;IACzBA,OAAO,CAACF,EAAE,GAAG,IAAI,CAACF,QAAQ,CAACM,MAAM,GAAG,CAAC;IACrC,IAAI,CAACN,QAAQ,CAACO,IAAI,CAACH,OAAO,CAAC;EAC7B;;AApBWP,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAW,SAAXX,WAAW;EAAAY,YAFV;AAAM","names":["PROBLEMS","DataService","constructor","getProblems","problems","getProblem","id","find","problem","addProblem","length","push","factory","providedIn"],"sourceRoot":"","sources":["/Users/wawa/Projects/Collaborative-Online-Coding/oj-client/src/app/services/data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Problem } from \"../models/problem.model\";\nimport {PROBLEMS} from \"../mock-problems\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  // 变量problem,初始化为PROBLEMS：\n  problems: Problem[] = PROBLEMS;\n   \n  constructor() { }\n\n  // 获取所有problems\n  getProblems(): Problem[] {\n    return this.problems;\n  }\n\n  // 获取某一problem\n  getProblem(id: number): Problem {\n    return this.problems.find((problem) => problem.id === id);\n  }\n\n  addProblem(problem: Problem): void{\n    problem.id = this.problems.length + 1;\n    this.problems.push(problem)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}