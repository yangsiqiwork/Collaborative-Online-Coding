{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction NewProblemComponent_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const difficulty_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", difficulty_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", difficulty_r1, \" \");\n  }\n}\nconst DEFAULT_PROBLEM = Object.freeze({\n  id: 0,\n  name: \"\",\n  desc: \"\",\n  difficulty: \"Easy\"\n});\nexport class NewProblemComponent {\n  constructor(data) {\n    this.data = data;\n    this.difficulties = [\"Easy\", \"Medium\", \"Hard\", \"Super\"];\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n  addProblem() {\n    this.data.addProblem(this.newProblem);\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n}\nNewProblemComponent.ɵfac = function NewProblemComponent_Factory(t) {\n  return new (t || NewProblemComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\nNewProblemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewProblemComponent,\n  selectors: [[\"app-new-problem\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"form-group\"], [\"for\", \"problemName\"], [\"type\", \"text\", \"id\", \"problemName\", \"name\", \"problemName\", \"required\", \"\", \"placeholder\", \"Enter Problem Name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"difficulty\"], [\"id\", \"difficulty\", \"name\", \"difficulty\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"col-md-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"pull-right\", 3, \"click\"], [3, \"value\"]],\n  template: function NewProblemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\")(2, \"div\", 0)(3, \"label\", 1);\n      i0.ɵɵtext(4, \"Problem Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function NewProblemComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.newProblem.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 0)(7, \"label\", 3);\n      i0.ɵɵtext(8, \"difficulty\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function NewProblemComponent_Template_select_ngModelChange_9_listener($event) {\n        return ctx.newProblem.difficulty = $event;\n      });\n      i0.ɵɵtemplate(10, NewProblemComponent_option_10_Template, 2, 2, \"option\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"div\", 7)(13, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function NewProblemComponent_Template_button_click_13_listener() {\n        return ctx.addProblem();\n      });\n      i0.ɵɵtext(14, \"Add Problem\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.newProblem.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newProblem.difficulty);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.difficulties);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAiBgBA,iCAAqE;IACjEA,YACJ;IAAAA,iBAAS;;;;IAFuCA,qCAAoB;IAChEA,eACJ;IADIA,8CACJ;;;ACfhB,MAAMC,eAAe,GAAYC,MAAM,CAACC,MAAM,CAAC;EAC7CC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,EAAE;EACRC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE;CACb,CAAC;AAOF,OAAM,MAAOC,mBAAmB;EAK9BC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IAJjB,iBAAY,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAC,MAAM,EAAE,OAAO,CAAC;IAExD,eAAU,GAAYR,MAAM,CAACS,MAAM,CAAC,EAAE,EAAEV,eAAe,CAAC;EAEhB;EACxCW,UAAU;IACR,IAAI,CAACF,IAAI,CAACE,UAAU,CAAC,IAAI,CAACC,UAAU,CAAC;IACrC,IAAI,CAACA,UAAU,GAAGX,MAAM,CAACS,MAAM,CAAC,EAAE,EAAEV,eAAe,CAAC;EACtD;;AATWO,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAM;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDhBhClB,2BAAK;MAIgCA,4BAAY;MAAAA,iBAAQ;MAC7CA,gCAC2F;MAA9BA;QAAA;MAAA,EAA6B;MAD1FA,iBAC2F;MAO/FA,8BAAwB;MACIA,0BAAU;MAAAA,iBAAQ;MAC1CA,iCACsD;MAApCA;QAAA;MAAA,EAAmC;MACjDA,4EAES;MACbA,iBAAS;MAEbA,+BAAiB;MAEgDA;QAAA,OAASmB,gBAAY;MAAA,EAAC;MAACnB,4BAAW;MAAAA,iBAAS;;;MAlB3CA,eAA6B;MAA7BA,6CAA6B;MAUxEA,eAAmC;MAAnCA,mDAAmC;MAClBA,eAAe;MAAfA,0CAAe","names":["i0","DEFAULT_PROBLEM","Object","freeze","id","name","desc","difficulty","NewProblemComponent","constructor","data","assign","addProblem","newProblem","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/wawa/Projects/Collaborative-Online-Coding/oj-client/src/app/components/new-problem/new-problem.component.html","/Users/wawa/Projects/Collaborative-Online-Coding/oj-client/src/app/components/new-problem/new-problem.component.ts"],"sourcesContent":["<div>\n    <!-- <input type=\"text\" [(ngModel)] = \"newProblem.name\"> -->\n    <form>\n        <div class=\"form-group\">\n            <label for=\"problemName\">Problem Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"problemName\" \n            name=\"problemName\" required placeholder=\"Enter Problem Name\" [(ngModel)]=\"newProblem.name\">\n        </div>\n        <!-- <div class=\"form-group\">\n            <label for=\"problemDesc\">Problem Description</label>\n            <textarea type=\"text\" rows=\"3\" class=\"form-control\" id=\"problemDesc\" \n            name=\"problemDesc\" required placeholder=\"Enter Problem Description\" [(ngModel)]=\"newProblem.desc\">\n        </div> -->\n        <div class=\"form-group\">\n            <label for=\"difficulty\">difficulty</label>\n            <select class=\"form-control\" id=\"difficulty\" \n            name=\"difficulty\" [(ngModel)]=\"newProblem.difficulty\">\n                <option *ngFor=\"let difficulty of difficulties\" [value]=\"difficulty\">\n                    {{difficulty}}\n                </option>\n            </select>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <button type=\"submit\" class=\"btn btn-primary pull-right\" (click)=\"addProblem()\">Add Problem</button>\n            </div>\n        </div> \n    </form>\n</div>\n","import { Component } from '@angular/core';\nimport { Problem } from 'src/app/models/problem.model';\nimport { DataService } from 'src/app/services/data.service';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name: \"\",\n  desc: \"\",\n  difficulty: \"Easy\"\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent {\n  public difficulties = [\"Easy\", \"Medium\",\"Hard\", \"Super\"];\n\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n\n  constructor(private data: DataService) {}\n  addProblem(): void {\n    this.data.addProblem(this.newProblem);\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}